=======
Part 1
=======
set-title Vehicle-Network

docker rm -f $(docker ps -aq); docker volume rm -f $(docker volume ls -q)

docker ps -a

cd ~/BlockchainDeveloper/ex-commands/ex06/

./startEx06.sh

=======
Part 2
=======
code ~/BlockchainDeveloper

[
    {
        "name": "collectionVehiclePriceDetails",
        "policy": "OR('Org1MSP.member', 'Org2MSP.member')",
        "requiredPeerCount": 1,
        "maxPeerCount": 3,
        "blockToLive": 3,
        "memberOnlyRead": true,
        "memberOnlyWrite": true,
        "endorsementPolicy": {
            "signaturePolicy": "OR('Org2MSP.member')"
        }
    }
]

=======
Part 3
=======
super(Price.getClass(), [obj.vehicleNumber]);    // option A

return this.updatePrivate(price, 'collectionVehiclePriceDetails');

return this.getPrivate(vehicleNumber, 'collectionVehiclePriceDetails');

return await ctx.getPriceList().getPrice(vehicleNumber)

=======
Part 4
=======

cd ~/BlockchainDeveloper/SampleApplication/contract 
npm run-script build 

cd ~/BlockchainDeveloper/test-network
./upgradeChaincode.sh 1.9.7 2 ../SampleApplication/contract/collections_config.json

=======
Part 5
=======
set-title Manufacturer

set-title Regulator

set-title Insurer 

docker exec -it cli bash

export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID=Org1MSP
export CORE_PEER_ADDRESS=peer0.org1.example.com:7051
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/users/CLI-Manu-User@org1.example.com/msp
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

export PRICE=$(echo -n "{\"vehicleNumber\":\"Order11:Civic\",\"value\":40000}" | base64 | tr -d \\n)

peer chaincode invoke -o orderer.example.com:7050 --tls \
--cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \
-C mychannel -n vehicle-network -c '{"Args":["updatePriceDetails"]}' --transient "{\"price\":\"$PRICE\"}"

docker exec -it cli bash

export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID=Org2MSP
export CORE_PEER_ADDRESS=peer0.org2.example.com:9051
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/users/CLI-Regu-User@org2.example.com/msp
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt

peer chaincode query -o orderer.example.com:7050 --tls \
--cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \
-C mychannel -n vehicle-network -c '{"Args":["getPriceDetails", "Order11:Civic"]}'

docker exec -it cli bash

export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID=Org3MSP
export CORE_PEER_ADDRESS=peer0.org3.example.com:11051
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org3.example.com/users/CLI-Insu-User@org3.example.com/msp
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt

peer chaincode query -o orderer.example.com:7050 --tls \
--cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \
-C mychannel -n vehicle-network -c '{"Args":["getPriceDetails", "Order11:Civic"]}'

=======
Part 6
=======
docker ps | grep fabric-couchdb
http://localhost:5984/_utils
http://localhost:9984/_utils
=======
Part 7
=======

http://localhost:6001/api-docs
 
Order12:Prius                       
30000

{
  "vehicleID": "Order12:Prius",
  "value": "30000"
}

App-Manu-User



mycar1
App-Manu-User


=======
Part 8
=======
http://localhost:6001/api-docs 

Order13:Passat
35000

http://localhost:5984/_utils 

{
   "selector": {
      "value": {
         "$gte": 10000,
         "$lte": 50000
      }
   },
   "use_index": [
      "_design/priceDoc",
      "priceIndex"
   ]
}

=======
Part 9
=======
cd ~/BlockchainDeveloper/ex-commands/ex06

./stopEx06.sh

========================================
Troubleshooting collection config issue
========================================
cd ~/BlockchainDeveloper/code-solutions/ex06

./applyEx06Solution.sh